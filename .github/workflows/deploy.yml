name: Build and Deploy to Azure

on:
  push:
    branches:
      - main  # Тригер для запуску CI/CD при пуші в main гілку

jobs:
  build-and-deploy:
    runs-on: ubuntu-22.04

    steps:
      # 1. Чекаут репозиторію
      - name: Checkout Code
        uses: actions/checkout@v2

      # 2. Налаштування Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      # 3. Встановлення залежностей та збірка
      - name: Install and Build
        run: |
          npm install
          npm run build

      # 4. Логін в Azure
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # 5. Сборка Docker образу
      - name: Docker Build
        run: docker build -t ${{ secrets.ACR_LOGIN_SERVER }}/${{ env.ACR_REPO }}:${{ env.ACR_TAG }} .

        env:
          ACR_REPO: "81-docker-image"   # Назва вашого репозиторія в ACR
          ACR_TAG: "v1"         # Тег для Docker образу

      # 6. Логін в ACR і пуш Docker образу
      - name: Docker Push
        run: |
          az acr login --name 81acrname1
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/${{ env.ACR_REPO }}:${{ env.ACR_TAG }}

      # 7. Налаштування Web App для роботи з Docker
      - name: Configure Web App for Docker
        run: |
          az webapp config container set \
            --name my-ci-cd-app \
            --resource-group bondarenko-av24-resource-group \
            --docker-custom-image-name "${{ secrets.ACR_LOGIN_SERVER }}/81acrname1:latest" \
            --docker-registry-server-url "https://${{ secrets.ACR_LOGIN_SERVER }}" \
            --docker-registry-server-user 81acrname1 \
            --docker-registry-server-password ${{ secrets.ACR_PASSWORD }}

      # 8. Рестарт Web App для застосування нового образу
      - name: Restart Web App
        run: |
          az webapp restart --name my-ci-cd-app --resource-group bondarenko-av24-resource-group
