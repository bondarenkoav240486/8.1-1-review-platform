name: Build and Deploy to Azure

on:
  push:
    branches:
      - main  # Тригер для запуску CI/CD при пуші в main гілку

jobs:
  build-and-deploy:
    # runs-on: ubuntu-22.04
    runs-on: ubuntu-latest

    env:
      # ACR_LOGIN_SERVER: ${{ secrets.ACR_LOGIN_SERVER }}   # Azure Container Registry login server
      ACR_REPO: "81-docker-image"                          # Репозиторій в ACR
      ACR_TAG: "v1"

    steps:
      # 1. Чекаут репозиторію
      - name: Checkout Code
        uses: actions/checkout@v2

      # 2. Налаштування Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      # 3. Встановлення залежностей та збірка
      - name: Install and Build
        run: |
          npm install
          npm run build

      # 4. Логін в Azure
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
        
      # 5. Сборка Docker образу
      - name: Docker Build
        run: |
          echo "Building image: ${{ secrets.ACR_LOGIN_SERVER }}/${{ env.ACR_REPO }}:${{ env.ACR_TAG }}"
          docker build -t ${{ secrets.ACR_LOGIN_SERVER }}/${{ env.ACR_REPO }}:${{ env.ACR_TAG }} .

#        run: docker build -t ${{ secrets.ACR_LOGIN_SERVER }}/${{ env.ACR_REPO }}:${{ env.ACR_TAG }} .  
        

        env:
          ACR_REPO: "81-docker-image"   # Назва вашого репозиторія в ACR
          ACR_TAG: "v1"         # Тег для Docker образу

      # 6. Логін в ACR і пуш Docker образу
      - name: Docker Push
        run: |
          az acr login --name ${{ secrets.ACR_NAME }}
          echo "Login Server: ${{ secrets.ACR_LOGIN_SERVER }}"
          echo "Repository: ${{ env.ACR_REPO }}"
          echo "Tag: ${{ env.ACR_TAG }}"
          echo "Pushing image: ${{ secrets.ACR_LOGIN_SERVER }}/${{ env.ACR_REPO }}:${{ env.ACR_TAG }}"
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/${{ env.ACR_REPO }}:${{ env.ACR_TAG }}

      # 7. Налаштування Web App для роботи з Docker
      - name: Configure Web App Container
        run: |
          az webapp config container set \
            --name ${{ secrets.WEBAPP_NAME }} \
            --resource-group ${{ secrets.RESOURCE_GROUP }} \
            --docker-custom-image-name "${{ secrets.ACR_LOGIN_SERVER }}/${{ env.ACR_REPO }}:${{ env.ACR_TAG }}" \
            --docker-registry-server-url "https://${{ secrets.ACR_LOGIN_SERVER }}" \
            --docker-registry-server-user ${{ secrets.ACR_USERNAME }} \
            --docker-registry-server-password ${{ secrets.ACR_PASSWORD }}

      # 8. Рестарт Web App для застосування нового образу
      - name: Restart Web App
        run: |
          az webapp restart \
            --name ${{ secrets.WEBAPP_NAME }} \
            --resource-group ${{ secrets.RESOURCE_GROUP }}
